include "http"
include "clustering"

akka {

  # Log level used by the configured loggers
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "INFO"
  loglevel = ${?AKKA_LOG_LEVEL}

  actor {
  
    provider = "cluster"

    default-dispatcher {
      # Throughput for default Dispatcher, set to 1 for as fair as possible
      throughput = 10
    }
    
  }
  
  remote {
  
    enabled-transports = ["akka.remote.netty.tcp"]
    
    netty.tcp {
    
      hostname = ${clustering.ip}
      port = ${clustering.port}
      
      bind-hostname = 0.0.0.0
      bind-port = ${clustering.port}
      
    }
    
  }

  cluster {
  
    # Initial contact points of the cluster.
    # The nodes to join automatically at startup.
    seed-nodes = [
      "akka.tcp://"${clustering.name}"@"${clustering.seed.ip}":"${clustering.seed.port}
      ]
      
    # How long to wait for one of the seed nodes to reply to initial join request.
    # When this is the first seed node and there is no positive reply from the other
    # seed nodes within this timeout it will join itself to bootstrap the cluster.
    seed-node-timeout = 5s
    
    # The roles are part of the membership information and can be used by
    # routers or other services to distribute work to certain member types,
    # e.g. front-end and back-end nodes.
    roles = [ ${clustering.role} ]

    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    #auto-down-unreachable-after = 10s
    
  }
  
  http {
  
  	hostname = ${http.hostname}
  	port = ${http.port}
  
  }
  
  management.http {
  	
  	# Enable the api management of the cluster
  	enable = ${http.management.enable}
  
  	hostname = ${http.hostname}
  	port = ${http.port}
  	
  	bind-hostname = 0.0.0.0
  	bind-port = ${http.port}
  	
  	route-providers-read-only = true
  
  }
  
}
